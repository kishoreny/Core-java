######################################################
#
# File Name:        log4jRollingFile.properties
# JAVA File to use: Log4jDailyRollingFileAppender.Java 
#
######################################################

# The rootLogger resides at the top of logger hierarchy.
# Set level to DEBUG and added the console Appender With an arbitrary name(TI)
log4j.rootLogger=DEBUG, TIFile

# Appender Settings
log4j.appender.TIFile=org.apache.log4j.DailyRollingFileAppender

# Set the path and name of the file
log4j.appender.TIFile.File=c:/app/app.log

# File name Pattern
log4j.appender.TIFile.DatePattern='.'yyyy-MM-dd-HH-mm

# Appender Properties
log4j.appender.TIFile.layout=org.apache.log4j.PatternLayout

# Usage Explained below
log4j.appender.TIFile.layout.ConversionPattern= %d [Package.Class: %c] [Method: %t] %-5p - %m%n  


################################################
# Pattern Conversion Character and Description #
################################################

# m Outputs the application supplied message associated with the logging event.
# n Outputs the platform dependent line separator character or characters. 
# M Outputs the method name where the logging request was issued.

# c Outputs the name of the logger that published the logging event. 
#   precision specifier is given and it is an integer value
#   Conversion Pattern     Logger Name                Result
#   %c{1}                  org.apache.commons.Foo     Foo
#   %c{2}                  org.apache.commons.Foo     commons.Foo
#   %c{1.}                 org.apache.commons.Foo     o.a.c.Foo

# C Outputs the fully qualified class name of the caller issuing the logging request. 
# d Outputs the date of the logging event. Examples, %d{HH:mm:ss,SSS} or %d{HH:mm:ss}{GMT+0}
# F Outputs the file name where the logging request was issued.
# l Outputs location information of the caller which generated the logging event. 
# L Outputs the line number from where the logging request was issued.
# p Outputs the priority of the logging event.
# r Outputs the number of milliseconds elapsed since the creation of the logging event.

# t Output the name of the thread that generated the logging event.
# x Thread Context Stack associated with the thread that generated the logging event.
# X Thread Context Map, Examples, X{clientIP}, %X{clientNumber}
# The sequence %% outputs a single percent sign.
